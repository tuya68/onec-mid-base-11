
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//{{ Карташова А.Г. ДЗ по модулю 11. Добавление реквизитов формы "Согласованная скидка" 
	ГруппаСогласованнаяСкидка = Элементы.Добавить("ГруппаФормы", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
	ГруппаСогласованнаяСкидка.Вид = ВидГруппыФормы.ОбычнаяГруппа;

	ДобавляемыеРеквизиты = Новый Массив;
	КвалификаторЧисла = Новый КвалификаторыЧисла(5, 2, ДопустимыйЗнак.Неотрицательный);
  	ТипРеквизита = Новый ОписаниеТипов("Число", КвалификаторЧисла);
	РеквизитФормы = новый РеквизитФормы("ДЗ11_СогласованнаяСкидка", ТипРеквизита , "", "Согласованная скидка");
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
	
	ТипРеквизита = новый ОписаниеТипов("СправочникСсылка.ДЗ11_КонтактныеЛица");
	РеквизитФормы = новый РеквизитФормы("ДЗ11_КонтактноеЛицо", ТипРеквизита , "", "Контактное лицо");
	
	ДобавляемыеРеквизиты.Добавить(РеквизитФормы);
		
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ПолеВвода = Элементы.Добавить("КонтактноеЛицо", Тип ("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "ДЗ11_КонтактноеЛицо";
		
	ПолеВвода = Элементы.Добавить("СогласованнаяСкидка", Тип ("ПолеФормы"), ГруппаСогласованнаяСкидка);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "ДЗ11_СогласованнаяСкидка";
	ПолеВвода.МаксимальноеЗначение = 100;
	ПолеВвода.УстановитьДействие("ОкончаниеВводаТекста", "ДЗ11_СогласованнаяСкидкаОкончаниеВводаТекста" );
	
	Команда = Команды.Добавить("ПересчитатьСкидку");
	Команда.Заголовок = "ПересчитатьСкидку";
	Команда.Действие = "ДЗ11_ПересчитатьСУчетомСкидки";
	
	КнопкаПересчитатьСкидку = Элементы.Добавить("КнопкаПересчитатьСкидку", Тип("КнопкаФормы"), ГруппаСогласованнаяСкидка);
	КнопкаПересчитатьСкидку.ИмяКоманды = "ПересчитатьСкидку";
	КнопкаПересчитатьСкидку.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		
	//}}
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте  
Процедура ДЗ11_ПересчитатьСУчетомСкидки()

	Если Объект.Товары.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для применения скидки добавьте товар в документ.";
		Сообщение.Сообщить();
		Возврат;
	Иначе
		Для Каждого ТоварнаяСтрока Из Объект.Товары Цикл
			РассчитатьСуммуСтроки(ТоварнаяСтрока);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт

	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		ДЗ11_ПересчитатьСУчетомСкидки();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДЗ11_СогласованнаяСкидкаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных,
	СтандартнаяОбработка)
	Если Объект.Товары.Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для применения скидки добавьте товар в документ.";
		Сообщение.Сообщить();
		Возврат;
	Иначе
		Режим = РежимДиалогаВопрос.ДаНет;
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(Оповещение, "Пересчитать с учетом скидки?", Режим, 0);
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)

	Если (ТекущиеДанные.Скидка + ЭтотОбъект.ДЗ11_СогласованнаяСкидка) > 100 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Скидка не может быть больше 100%";
		Сообщение.Сообщить();
		Возврат;
	Иначе
		КоэффициентСкидки = 1 - (ТекущиеДанные.Скидка + ЭтотОбъект.ДЗ11_СогласованнаяСкидка) / 100;
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
